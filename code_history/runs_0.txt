new run: 1670288027.841024 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
new run: 1670288099.883019 
format error: None 
execution error: name 'training' is not defined 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(training.csv)
new run: 1670288108.486516 
format error: None 
execution error: name 'data' is not defined 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(data/training.csv)
new run: 1670288147.742961 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
new run: 1670288172.215202 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
df.head()
new run: 1670288196.450737 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
df.head()
new run: 1670288197.689304 
format error: None 
execution error: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'. 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288198.566529 
format error: unexpected EOF while parsing (1244265679.py, line 6) 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head
new run: 1670288223.5977721 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head)
new run: 1670288228.5615602 
format error: None 
execution error:  

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head)
new run: 1670288269.8651142 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

print("hi")
df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288400.4219441 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288644.172656 
format error: None 
execution error: None 
df.corr()
new run: 1670289423.177207 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
result.corr()
new run: 1670289444.333642 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
result.corr()
new run: 1670289571.259289 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
cr
new run: 1670289679.654855 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
df2.head()
new run: 1670289804.599405 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .05]
cr
X = result[['CRSArrTime','CRSDepTime']]
new run: 1670289819.771792 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']]
new run: 1670290574.832947 
format error: None 
execution error: name 'train_test_split' is not defined 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290632.417881 
format error: None 
execution error: cannot import name 'accuracy_score' from 'sklearn.model_selection' (/Users/matthewlarson/Library/Python/3.9/lib/python/site-packages/sklearn/model_selection/__init__.py) 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import accuracy_score, train_test_split

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290687.612521 
format error: None 
execution error: Input y contains NaN. 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290730.6349561 
format error: None 
execution error: Input y contains NaN. 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290791.115131 
format error: None 
execution error: name 'true' is not defined 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(in_place = true)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290829.4245288 
format error: None 
execution error: dropna() got an unexpected keyword argument 'in_place' 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(in_place = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670291767.968041 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670291807.20913 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(inplace = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

print(df.shape)
new run: 1670291858.909455 
format error: None 
execution error: None 
print(len(X))
new run: 1670291864.531351 
format error: None 
execution error: None 
print(len(X[0]))
new run: 1670291869.999645 
format error: None 
execution error: None 
print(X)
new run: 1670295309.470051 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670295320.020413 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(inplace = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

print(df.shape)
new run: 1670295351.522038 
format error: None 
execution error: name 'LogisticRegression' is not defined 
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670295383.008349 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670297214.0190651 
format error: None 
execution error: None 
Y_hat
new run: 1670297224.494312 
format error: None 
execution error: None 
max(Y_hat)
new run: 1670297242.794896 
format error: None 
execution error: None 
max(Y)
new run: 1670297248.827362 
format error: None 
execution error: None 
max(Y_hat)
new run: 1670297258.2139452 
format error: None 
execution error: None 
max(Y_test)
new run: 1670297295.1103702 
format error: None 
execution error: None 
(sum(Y_test) - sum(Y_hat))/len(Y_test)
new run: 1670297349.988244 
format error: None 
execution error: None 
(sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(sum)
new run: 1670297368.641262 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(sum)

print(Y_hat[Y_hat == 0])
new run: 1670297373.751578 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(sum)

print(Y_hat[Y_hat == 1])
new run: 1670297392.992413 
format error: None 
execution error: None 
(sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])


new run: 1670297459.0983129 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670297540.4041312 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max
new run: 1670297543.4422169 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max()
new run: 1670297555.532968 
format error: None 
execution error: name 'Svn' is not defined 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = Svn()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670297767.797178 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670297800.7417002 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .02]
print(cr)
result.dropna(inplace = True)
X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670297837.856729 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670297865.16106 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max()
new run: 1670297870.224236 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat
new run: 1670298079.065668 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .02]
print(cr)
result.dropna(inplace = True)
X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670298113.020624 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[abs(cr["DepDel15"]) > .02]
print(cr)
result.dropna(inplace = True)
X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670298177.183519 
format error: None 
execution error: None 
df.dropna(inplace = True)
result = df.select_dtypes(include='number')

print(result.head())
cr = df.corr()
cr = cr[abs(cr["DepDel15"]) > .02]
print(cr)

X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670298741.342796 
format error: None 
execution error: None 
df.columns
new run: 1670298926.7088919 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.columns
new run: 1670298980.826483 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.columns
filtered.corr()
new run: 1670299030.200338 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop("Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299072.122026 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop(["Year"],inplace = True)
filtered.columns
filtered.corr()
new run: 1670299108.950428 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop(index = "Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299131.4709928 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.columns
filtered.corr()
new run: 1670299145.058828 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop(index = "Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299174.4473999 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299283.469245 
format error: None 
execution error: 'Delay' 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] == filtered[CRSElapsedTime] - (filtered[CRSArrTime] - filtered[CRSArrTime])
filtered.corr()
new run: 1670299292.695582 
format error: None 
execution error: name 'CRSElapsedTime' is not defined 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered[CRSElapsedTime] - (filtered[CRSArrTime] - filtered[CRSArrTime])
filtered.corr()
new run: 1670299347.971904 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered['CRSElapsedTime'] - (filtered['CRSArrTime'] - filtered['CRSArrTime'])
filtered.corr()
new run: 1670299498.688907 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = (filtered['CRSArrTime'] - filtered['CRSArrTime']) - filtered['CRSElapsedTime'] > 5
filtered.corr()
new run: 1670299526.419164 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered['CRSElapsedTime'] - (filtered['CRSArrTime'] - filtered['CRSArrTime'])
filtered.corr()
new run: 1670301514.976774 
format error: None 
execution error: None 
print(df.columns)
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered['CRSElapsedTime'] - (filtered['CRSArrTime'] - filtered['CRSArrTime'])
filtered.corr()
new run: 1670301671.502723 
format error: None 
execution error: name 'df1' is not defined 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df1[['OriginAiportID']].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301675.510208 
format error: None 
execution error: "None of [Index(['OriginAiportID'], dtype='object')] are in the [columns]" 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df[['OriginAiportID']].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301690.587929 
format error: None 
execution error: 'OriginAiportID' 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAiportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301711.984396 
format error: None 
execution error: Expected 2D array, got 1D array instead:
array=[10146 10146 10146 ... 11612 13930 12197].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample. 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301756.646879 
format error: None 
execution error: Expected 2D array, got 1D array instead:
array=[10146 10146 10146 ... 11612 13930 12197].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample. 
from sklearn.preprocessing import OneHotEncoder

print(df['OriginAirportID'])
ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301796.55326 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

print(df['OriginAirportID'])
ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
ohe_airports
new run: 1670301808.452467 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
ohe_airports
new run: 1670301820.41362 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
print(ohe_airports)
new run: 1670301846.658766 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
print(ohe_airports)
print(ohe_airports[0])
new run: 1670301935.297358 
format error: None 
execution error: 'numpy.ndarray' object has no attribute 'corr' 
ohe_airports.corr(df['DepDel15'])
new run: 1670301985.997668 
format error: None 
execution error: module 'numpy' has no attribute 'corr' 
np.corr(ohe_airports,df['DepDel15'])
new run: 1670302016.667825 
format error: None 
execution error: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 370 and the array at index 1 has size 5602912 
np.corrcoef(ohe_airports,df['DepDel15'])
new run: 1670302041.095256 
format error: None 
execution error: None 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
new run: 1670302053.188035 
format error: None 
execution error: None 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
df['DepDel15'].shape
new run: 1670302254.4637141 
format error: None 
execution error: Expected a 1D array, got an array with shape (5602912, 370) 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
filtered["OHE"] = ohe_airports
filtered.corr()
new run: 1670303865.435792 
format error: None 
execution error: None 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
X = ohe_airports
Y = filtered['DepDel15'].to_numpy()
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

# print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670306063.562895 
format error: None 
execution error: None 
df.dropna(inplace = True)
result = df.select_dtypes(include='number')

print(result.head())
cr = df.corr()
cr = cr[abs(cr["DepDel15"]) > .02]
print(cr)

X = result[['CRSDepTime','CRSArrTime','OriginAirportID']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
new run: 1670306099.0271602 
format error: None 
execution error: None 
df.dropna(inplace = True)
result = df.select_dtypes(include='number')

print(result.head())
cr = result.corr()
cr = cr[abs(cr["DepDel15"]) > .02]
print(cr)

X = result[['CRSDepTime','CRSArrTime','OriginAirportID']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
new run: 1670306125.186912 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670306274.8444622 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max()
new run: 1670306289.64259 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_train.max()
new run: 1670306332.3690612 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(len(Y_train[Y_train == 0]))
len(Y_train[Y_train == 1])
new run: 1670306357.905397 
format error: invalid syntax (945968056.py, line 3) 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(len(Y_train[Y_train == 0]))
len(Y_train[Y_train == 1])/(len(Y_train[Y_train == 1]) = len(Y_train[Y_train == 0]))
new run: 1670306364.5308769 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(len(Y_train[Y_train == 0]))
len(Y_train[Y_train == 1])/(len(Y_train[Y_train == 1]) + len(Y_train[Y_train == 0]))
new run: 1670307019.7718 
format error: None 
execution error: 'DataFrame' object has no attribute 'get_dummies' 
testing = df.get_dummies(df['Origin'],drop_first = True)
testing
new run: 1670307074.320588 
format error: None 
execution error: None 
testing = pd.get_dummies(df['Origin'],drop_first = True)
testing
new run: 1670307134.864013 
format error: None 
execution error: None 
testing = pd.get_dummies(df['Origin'],drop_first = True)
testing
print(df.columns)
new run: 1670307294.894651 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,df['DepDel15']], axis = 1)
new.head()
new run: 1670307325.011174 
format error: None 
execution error: name 'sort' is not defined 
sort(new.corr()['DepDel15'])
new run: 1670307743.975432 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670307772.665966 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,df['DepDel15']], axis = 1)
new.head()
new run: 1670307797.0935402 
format error: None 
execution error: None 
new2 = new.sample(n = 1000)
(new2.corr()['DepDel15']).sort_values(ascending = False)
new run: 1670307822.8464708 
format error: None 
execution error: None 
new2 = new.sample(n = 10000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
new run: 1670307833.9558861 
format error: None 
execution error: None 
new2 = new.sample(n = 10000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
new run: 1670307914.506639 
format error: None 
execution error: None 
new2 = new.sample(n = 100000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
corr_check.dropna(inplace = True)
print(corr_check[corr_check > .05])
new run: 1670308004.1407151 
format error: None 
execution error: None 
print(corr_check)
new run: 1670308030.794398 
format error: None 
execution error: None 
print(corr_check[abs(corr_check)> .3])
new run: 1670308052.0902212 
format error: None 
execution error: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all(). 
print(corr_check[(corr_check)> .3 or corr_check < -.3])
new run: 1670308056.974415 
format error: None 
execution error: Cannot perform 'ror_' with a dtyped [float64] array and scalar of type [bool] 
print(corr_check[(corr_check)> .3 | corr_check < -.3])
new run: 1670308077.629547 
format error: None 
execution error: None 
print(corr_check[(corr_check> .3) | (corr_check < -.3)])
new run: 1670308092.6243358 
format error: None 
execution error: None 
print(corr_check[(corr_check> .03) | (corr_check < -.03)])
new run: 1670308215.5642729 
format error: None 
execution error: None 
X = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']].to_numpy()
Y = new['DepDel15'].to_numpy()
new run: 1670308236.576988 
format error: None 
execution error: name 'train_test_split' is not defined 
X = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']].to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670308249.9946408 
format error: None 
execution error: Input y contains NaN. 
X = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']].to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670308322.911202 
format error: None 
execution error: None 
new.dropna(inplace = True)
X = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']].to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670308357.2356539 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670308398.563349 
format error: None 
execution error: "['CRSDepTime', 'CRSArrTime'] not in index" 
new.dropna(inplace = True)
X = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670308558.900748 
format error: None 
execution error: first argument must be an iterable of pandas objects, you passed an object of type "DataFrame" 
# new.dropna(inplace = True)
testing = pd.concat(new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']],df[['CRSDepTime','CRSArrTime']])
testing.dropna(inplace = True)

X = testing.to_numpy()
Y = testing['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670308625.96841 
format error: None 
execution error: first argument must be an iterable of pandas objects, you passed an object of type "DataFrame" 
# new.dropna(inplace = True)
one = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']]
testing = pd.concat(one,df['CRSDepTime'])
testing.dropna(inplace = True)

X = testing.to_numpy()
Y = testing['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
# X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

# model = LogisticRegression()
# model.fit(X_train,Y_train)

# Y_hat = model.predict(X_train)
new run: 1670308664.558801 
format error: None 
execution error: first argument must be an iterable of pandas objects, you passed an object of type "DataFrame" 
# new.dropna(inplace = True)
one = new[['Southwest Airlines Co.','JetBlue Airways','Frontier Airlines Inc.','MDW','Alaska Airlines Inc.','Hawaiian Airlines Inc.','Delta Air Lines Inc.']]
two = df[['CRSDepTime','CRSArrTime']]
testing = pd.concat(one,two)
testing.dropna(inplace = True)

X = testing.to_numpy()
Y = testing['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
# X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

# model = LogisticRegression()
# model.fit(X_train,Y_train)

# Y_hat = model.predict(X_train)
new run: 1670308728.1518028 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime']], axis = 1)
new.head()
new run: 1670308768.931517 
format error: None 
execution error: name 'testing' is not defined 
# new.dropna(inplace = True)

testing.dropna(inplace = True)

X = new.to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670309188.0781581 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670309206.189086 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime']], axis = 1)
new.head()
new run: 1670309279.9984078 
format error: None 
execution error: None 
new.dropna(inplace = True)

# testing.dropna(inplace = True)
new2 = new.sample(n = 100000)
X = new2.to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670309349.801003 
format error: None 
execution error: None 
new.dropna(inplace = True)

# testing.dropna(inplace = True)
new2 = new.sample(n = 1000)
X = new2.to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670309354.781963 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670309366.303038 
format error: None 
execution error: None 
Y_train.max()
new run: 1670309397.200873 
format error: None 
execution error: sort() got an unexpected keyword argument 'ascending' 
Y_train.sort(ascending = False)
new run: 1670309431.359915 
format error: None 
execution error: 'numpy.ndarray' object has no attribute 'sort_values' 
Y_train.sort_values(ascending = False)
new run: 1670309554.320607 
format error: None 
execution error: None 
Y_train[::-1].sort()
new run: 1670309563.2612648 
format error: None 
execution error: None 
Y_train[::-1].sort()
Y_train
new run: 1670309596.536449 
format error: None 
execution error: Expected 2D array, got 1D array instead:
array=[0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 1. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 1.
 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
 1. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
 0. 0. 1. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
 0. 0. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample. 
new.dropna(inplace = True)

# testing.dropna(inplace = True)
new2 = new.sample(n = 1000)
X = new2['DepDel15'].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670309629.799262 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670309662.664051 
format error: None 
execution error: 'list' object has no attribute 'to_numpy' 
new.dropna(inplace = True)

# testing.dropna(inplace = True)
new2 = new.sample(n = 1000)
X = [new2['DepDel15'],np.zeros(len(new2))].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670309699.239813 
format error: None 
execution error: None 
new.dropna(inplace = True)

# testing.dropna(inplace = True)
new2 = new.sample(n = 1000)
X = new2[['DepDel15','DepDel15']].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670309702.1348522 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670309717.652138 
format error: None 
execution error: None 
new.dropna(inplace = True)

# testing.dropna(inplace = True)
new2 = new.sample(n = 1000)
X = new2[['DepDel15','DepDel15']].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670309720.54176 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670309743.662355 
format error: None 
execution error: None 
Y_hat.sum()-Y_test.sum()
new run: 1670309813.831407 
format error: None 
execution error: None 
new2 = new.sample(n = 100000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
corr_check.dropna(inplace = True)
print(corr_check[corr_check > .05])
new run: 1670309846.262382 
format error: None 
execution error: None 
print(corr_check[abs(corr_check) > .03])
new run: 1670310071.4723861 
format error: None 
execution error: 'DepDel15l15' 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
from scipy.stats import pearsonr
pearsonr(bad,new['DepDel15l15'])
new run: 1670310077.904157 
format error: None 
execution error: None 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
from scipy.stats import pearsonr
pearsonr(bad,new['DepDel15'])
new run: 1670310116.817665 
format error: None 
execution error: None 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
from scipy.stats import pearsonr
pearsonr(bad,new['DepDel15'])
new run: 1670310121.33424 
format error: None 
execution error: None 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
from scipy.stats import pearsonr
pearsonr(good,new['DepDel15'])
new run: 1670310209.6345868 
format error: None 
execution error: x and y must have the same length. 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = df['CRSArrTime'] - df['CRSDepTime'] - df['CRSElapsedTime']

from scipy.stats import pearsonr
pearsonr(time_dif,new['DepDel15'])
new run: 1670310216.954945 
format error: None 
execution error: array must not contain infs or NaNs 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = df['CRSArrTime'] - df['CRSDepTime'] - df['CRSElapsedTime']

from scipy.stats import pearsonr
pearsonr(time_dif,df['DepDel15'])
new run: 1670310244.2290711 
format error: None 
execution error: x and y must have the same length. 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = df['CRSArrTime'] - df['CRSDepTime'] - df['CRSElapsedTime']
time_dif.dropna(inplace = True)
from scipy.stats import pearsonr
pearsonr(time_dif,new['DepDel15'])
new run: 1670310273.662354 
format error: None 
execution error: x and y must have the same length. 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = df['CRSArrTime'] - df['CRSDepTime'] - df['CRSElapsedTime']
time_dif.dropna(inplace = True)
from scipy.stats import pearsonr
new.shape
pearsonr(time_dif,new['DepDel15'])
new run: 1670310283.960118 
format error: None 
execution error: x and y must have the same length. 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = df['CRSArrTime'] - df['CRSDepTime'] - df['CRSElapsedTime']
time_dif.dropna(inplace = True)
from scipy.stats import pearsonr
print(new.shape)
pearsonr(time_dif,new['DepDel15'])
new run: 1670310295.322133 
format error: None 
execution error: x and y must have the same length. 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = df['CRSArrTime'] - df['CRSDepTime'] - df['CRSElapsedTime']
time_dif.dropna(inplace = True)
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new run: 1670310347.618151 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime'],df['CRSElapsedTime']], axis = 1)
new.head()
new run: 1670310360.910492 
format error: None 
execution error: x and y must have the same length. 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = new['CRSArrTime'] - new['CRSDepTime'] - new['CRSElapsedTime']
time_dif.dropna(inplace = True)
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new run: 1670310366.635169 
format error: None 
execution error: array must not contain infs or NaNs 
bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = new['CRSArrTime'] - new['CRSDepTime'] - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new run: 1670310435.9911628 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime'],df['CRSElapsedTime']], axis = 1)
new.dropna(inplace = True)
new.head()
new run: 1670310441.5544808 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = new['CRSArrTime'] - new['CRSDepTime'] - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new run: 1670310480.817754 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = (new['CRSArrTime'] - new['CRSDepTime']) - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new run: 1670310520.755975 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = (new['CRSArrTime'] - new['CRSDepTime']) - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSArrTime'][0]
new run: 1670310530.39728 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = (new['CRSArrTime'] - new['CRSDepTime']) - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSDepTime'][0]
new run: 1670310541.336237 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = (new['CRSArrTime'] - new['CRSDepTime']) - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSElapsedTime'][0]
new run: 1670310553.997429 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = (new['CRSArrTime'] - new['CRSDepTime']) - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSDepTime'][0]
new run: 1670310560.414222 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
time_dif = (new['CRSArrTime'] - new['CRSDepTime']) - new['CRSElapsedTime']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSArrTime'][0]
new run: 1670310588.149206 
format error: None 
execution error: None 
df.columns
new run: 1670310703.176043 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSArrTime'][0]
type(corr_check[corr_check > 0])
new run: 1670310714.355645 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSArrTime'][0]
(corr_check[corr_check > 0])
new run: 1670310730.026725 
format error: None 
execution error: None 

bad = new['Southwest Airlines Co.'] | new['JetBlue Airways'] | new['Frontier Airlines Inc.'] | new['MDW']
good = new['Alaska Airlines Inc.'] | new['Hawaiian Airlines Inc.'] | new['Delta Air Lines Inc.']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(time_dif,new['DepDel15'])
new['CRSArrTime'][0]
(corr_check[corr_check > .005])
new run: 1670311025.714962 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
Airline = pd.get_dummies(df['Airline'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df['DOT_ID_Operating_Airline'],drop_first = True)

new = pd.concat([Origin,Airline,DayOfWeek,DOT,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime'],df['CRSElapsedTime']], axis = 1)
new.dropna(inplace = True)
new.head()
new run: 1670311071.212068 
format error: None 
execution error: None 
new2 = new.sample(n = 10000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
corr_check.dropna(inplace = True)
print(corr_check[corr_check > .05])
new run: 1670311082.794488 
format error: None 
execution error: None 
print(corr_check[abs(corr_check) > .03])
new run: 1670311162.527487 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df['DOT_ID_Operating_Airline'],drop_first = True)

new = pd.concat([Origin,DayOfWeek,DOT,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime'],df['CRSElapsedTime']], axis = 1)
new.dropna(inplace = True)
new.head()
new run: 1670311217.3433442 
format error: None 
execution error: None 
new2 = new.sample(n = 100000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
corr_check.dropna(inplace = True)
print(corr_check[corr_check > .03])
new run: 1670311343.8491662 
format error: None 
execution error: None 
new2 = new.sample(n = 100000)
corr_check = (new2.corr()['DepDel15']).sort_values(ascending = False)
corr_check.dropna(inplace = True)
print(corr_check[abs(corr_check) > .03])
new run: 1670311446.506649 
format error: None 
execution error: '20409' 

bad = new['20409'] | new['20436'] | new['MDW']
good = new['19930'] | new['19690'] | new['19790']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(bad,new['DepDel15'])
new run: 1670311485.810251 
format error: None 
execution error: '20436' 

bad = new[20409] | new['20436'] | new['MDW']
good = new['19930'] | new['19690'] | new['19790']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(bad,new['DepDel15'])
new run: 1670311494.193902 
format error: None 
execution error: '19930' 

bad = new[20409] | new[20436] | new['MDW']
good = new['19930'] | new['19690'] | new['19790']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(bad,new['DepDel15'])
new run: 1670311505.121221 
format error: None 
execution error: '19790' 

bad = new[20409] | new[20436] | new['MDW']
good = new[19930] | new[19690] | new['19790']
from scipy.stats import pearsonr
print(df.shape)
pearsonr(bad,new['DepDel15'])
new run: 1670311510.8393888 
format error: None 
execution error: None 

bad = new[20409] | new[20436] | new['MDW']
good = new[19930] | new[19690] | new[19790]
from scipy.stats import pearsonr
print(df.shape)
pearsonr(bad,new['DepDel15'])
new run: 1670311516.2767081 
format error: None 
execution error: None 

bad = new[20409] | new[20436] | new['MDW']
good = new[19930] | new[19690] | new[19790]
from scipy.stats import pearsonr
print(df.shape)
pearsonr(good,new['DepDel15'])
new run: 1670311622.3229 
format error: None 
execution error: 'function' object is not subscriptable 
new2 = new.sample(n = 1000)
X = pd.concat[bad,good,new2['CRSArrTime'],new2['CRSDepTime']]
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311632.623085 
format error: None 
execution error: first argument must be an iterable of pandas objects, you passed an object of type "Series" 
new2 = new.sample(n = 1000)
X = pd.concat(bad,good,new2['CRSArrTime'],new2['CRSDepTime'])
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311661.220852 
format error: None 
execution error: first argument must be an iterable of pandas objects, you passed an object of type "Series" 
new2 = new.sample(n = 1000)
X = pd.concat(new2['CRSArrTime'],new2['CRSDepTime'],bad,good)
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311709.636111 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [5602931, 1000] 
new2 = new.sample(n = 1000)
X = pd.concat([new2['CRSArrTime'],new2['CRSDepTime'],bad,good],axis = 1)
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311738.0136828 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [5602931, 1000] 
new2 = new.sample(n = 1000)
X = pd.concat([new2['CRSArrTime'],new2['CRSDepTime'],bad,good],axis = 1)
Y = new2['DepDel15'].to_numpy()

print(X.shape)
print(Y.shape)
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311819.602025 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [5602931, 1000] 
new2 = pd.concat([new,bad,good],axis = 1).sample(n = 1000)
print(new2.head)
X = pd.concat([new2['CRSArrTime'],new2['CRSDepTime'],bad,good],axis = 1)
Y = new2['DepDel15'].to_numpy()

print(X.shape)
print(Y.shape)
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311866.640245 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [5602931, 1000] 
new2 = pd.concat([new,bad,good],axis = 1).sample(n = 1000)
print(new2.columns)
X = pd.concat([new2['CRSArrTime'],new2['CRSDepTime'],bad,good],axis = 1)
Y = new2['DepDel15'].to_numpy()

print(X.shape)
print(Y.shape)
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311892.20419 
format error: None 
execution error: None 
new2 = pd.concat([new,bad,good],axis = 1).sample(n = 1000)
X = pd.concat([new2['CRSArrTime'],new2['CRSDepTime'],new2[0],new2[1]],axis = 1)
Y = new2['DepDel15'].to_numpy()

print(X.shape)
print(Y.shape)
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670311998.7048562 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 1000)
X = new2[['bad','good']].to_numpy()
Y = new2['DepDel15'].to_numpy()

print(X.shape)
print(Y.shape)
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670312016.1012878 
format error: None 
execution error: None 
Y_train.max
new run: 1670312019.9315488 
format error: None 
execution error: None 
Y_train.max()
new run: 1670312024.329328 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670312056.55955 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 10000)
X = new2[['bad','good']].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670312060.036341 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
new run: 1670312080.4236841 
format error: None 
execution error: None 
print(Y_test.max())
Y_hat.max()
new run: 1670312125.2879858 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 10000)
X = new2[['bad','good']].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670312150.8341792 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
new run: 1670312171.917037 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 10000)
X = new2[['bad','good']].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670312284.96073 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
new run: 1670312325.449204 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 10000)
X = new2[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new2['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670312330.880406 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
new run: 1670312388.046986 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 10000)
X = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670312527.585375 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
new run: 1670312582.91013 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
accuracy_score(Y_train,Y_hat)
new run: 1670312637.47599 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
new2 = new.sample(n = 10000)
X = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670312703.39969 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [3753963, 1848968] 
print(Y_train.max())
Y_hat.max()
accuracy_score(Y_train,Y_hat)
new run: 1670312712.00564 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
accuracy_score(Y_test,Y_hat)
new run: 1670312746.624684 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
print(Y_test.sum()/len(Y_test))
accuracy_score(Y_test,Y_hat)
new run: 1670312755.671506 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
print(1-(Y_test.sum()/len(Y_test)))
accuracy_score(Y_test,Y_hat)
new run: 1670313246.850183 
format error: None 
execution error: array must not contain infs or NaNs 
df.columns
df['smile'] = df['CRSDepTime'] > 1900
pearsonr(df['smile'],df['DepDel15'])
new run: 1670313281.335467 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1900
df2 = df.dropna()
pearsonr(df2['smile'],df2['DepDel15'])
new run: 1670313304.851244 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 2000
df2 = df.dropna()
pearsonr(df2['smile'],df2['DepDel15'])
new run: 1670313393.121272 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1600
df2 = df.dropna()
pearsonr(df2['smile'],df2['DepDel15'])
new run: 1670313606.9045498 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1200
df2 = df.dropna()
pearsonr(df2['smile'],df2['DepDel15'])
new run: 1670313678.6059499 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 800
df2 = df.dropna()
pearsonr(df2['smile'],df2['DepDel15'])
new run: 1670313762.414127 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df2 = df.dropna()
pearsonr(df2['smile'],df2['DepDel15'])
new run: 1670313820.924434 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1000
df2 = df.dropna()
pearsonr(df2['smile2'],df2['DepDel15'])
new run: 1670313851.0917308 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1300
df['smile3'] = df['smile'] | df['smile2']
df2 = df.dropna()
pearsonr(df2['smile2'],df2['DepDel15'])
new run: 1670313877.858283 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1400
df['smile3'] = df['smile'] | df['smile2']
df2 = df.dropna()
pearsonr(df2['smile2'],df2['DepDel15'])
new run: 1670313895.943052 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1500
df['smile3'] = df['smile'] | df['smile2']
df2 = df.dropna()
pearsonr(df2['smile2'],df2['DepDel15'])
new run: 1670313915.277426 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1800
df['smile3'] = df['smile'] | df['smile2']
df2 = df.dropna()
pearsonr(df2['smile2'],df2['DepDel15'])
new run: 1670313933.4302459 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1600
df['smile3'] = df['smile'] | df['smile2']
df2 = df.dropna()
pearsonr(df2['smile2'],df2['DepDel15'])
new run: 1670313951.0601668 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1600
df['smile3'] = df['smile'] | df['smile2']
df2 = df.dropna()
pearsonr(df2['smile3'],df2['DepDel15'])
new run: 1670313973.2932858 
format error: None 
execution error: None 
df.columns
df['smile'] = df['CRSDepTime'] > 1000
df['smile2'] = df['CRSArrTime'] > 1600
df['smile3'] = df['smile'] & df['smile2']
df2 = df.dropna()
pearsonr(df2['smile3'],df2['DepDel15'])
new run: 1670366915.443276 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670366979.529197 
format error: None 
execution error: None 
Origin = pd.get_dummies(df['Origin'],drop_first = True)
DayOfWeek = pd.get_dummies(df['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df['DOT_ID_Operating_Airline'],drop_first = True)

new = pd.concat([Origin,DayOfWeek,DOT,df['DepDel15'],df['CRSDepTime'],df['CRSArrTime'],df['CRSElapsedTime']], axis = 1)
new.dropna(inplace = True)
new.head()
new run: 1670367019.870024 
format error: None 
execution error: None 

bad = new[20409] | new[20436] | new['MDW']
good = new[19930] | new[19690] | new[19790]
from scipy.stats import pearsonr
print(df.shape)
pearsonr(good,new['DepDel15'])
new run: 1670367080.1478589 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler
new run: 1670367138.9925818 
format error: None 
execution error: None 
new['bad'] = bad
new['good'] = good
scale= StandardScaler()
X = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()
X = scale.fit_transform(X) 
new run: 1670367163.265903 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPClassifier

new run: 1670367180.676686 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
new run: 1670367216.236206 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670369047.311925 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670369555.949247 
format error: None 
execution error: name 'model' is not defined 
Y_hat = model.predict(X_test)
new run: 1670369586.4210958 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670370366.9793699 
format error: None 
execution error: None 
Y_hat.max
new run: 1670370372.1250281 
format error: None 
execution error: None 
Y_hat.max()
new run: 1670370393.536126 
format error: None 
execution error: None 
Y_test.max()
new run: 1670370405.2359948 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670370424.3198268 
format error: None 
execution error: None 
Y_test.sum()
new run: 1670370430.5802162 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670370676.260902 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 10000)
X3 = X3.sample(n = 10000)
X = X2.merge(X3)
new run: 1670370685.0913222 
format error: None 
execution error: None 
X.shape
new run: 1670370688.5373921 
format error: None 
execution error: 'tuple' object is not callable 
X.shape()
new run: 1670370725.849327 
format error: None 
execution error: first argument must be an iterable of pandas objects, you passed an object of type "DataFrame" 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 10000)
X3 = X3.sample(n = 10000)
X = pd.concat(X2,X3)
new run: 1670370771.2526631 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 10000)
X3 = X3.sample(n = 10000)
X = pd.concat([X2,X3])
new run: 1670370784.142022 
format error: None 
execution error: None 
X.shape
new run: 1670370832.581503 
format error: None 
execution error: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices 
X  = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = X['DepDel15'].to_numpy()
X = scale.fit_transform(X) 
new run: 1670370850.5235891 
format error: None 
execution error: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices 
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = X['DepDel15'].to_numpy()
X = scale.fit_transform(X) 
new run: 1670370871.475093 
format error: None 
execution error: 'numpy.ndarray' object has no attribute 'columns' 
# X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
# Y = X['DepDel15'].to_numpy()
# X = scale.fit_transform(X) 
print(X.columns)
new run: 1670370893.969543 
format error: None 
execution error: 'numpy.ndarray' object has no attribute 'head' 
# X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
# Y = X['DepDel15'].to_numpy()
# X = scale.fit_transform(X) 
print(X.head)
new run: 1670370920.064702 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 10000)
X3 = X3.sample(n = 10000)
X = pd.concat([X2,X3])
new run: 1670370924.900367 
format error: None 
execution error: None 
# X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
# Y = X['DepDel15'].to_numpy()
# X = scale.fit_transform(X) 
print(X.head)
new run: 1670370933.918172 
format error: None 
execution error: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices 
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = X['DepDel15'].to_numpy()
X = scale.fit_transform(X) 
print(X.head)
new run: 1670370951.736068 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 10000)
X3 = X3.sample(n = 10000)
X = pd.concat([X2,X3])
new run: 1670370958.975379 
format error: None 
execution error: 'numpy.ndarray' object has no attribute 'head' 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
print(X.head)
new run: 1670370964.143243 
format error: None 
execution error: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670370981.000514 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 10000)
X3 = X3.sample(n = 10000)
X = pd.concat([X2,X3])
new run: 1670370985.815281 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670370993.774379 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371031.434101 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371044.422366 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670371048.337656 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670371052.065918 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670371065.9854028 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670371148.817282 
format error: None 
execution error: None 
X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670371210.473069 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670371265.3823009 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 100000)
X = pd.concat([X2,X3])
new run: 1670371271.147346 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670371275.3072362 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371302.7722838 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670371307.6300879 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670371310.254685 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670371316.702955 
format error: None 
execution error: None 
X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670371394.249609 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670371435.429776 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 50000)
X = pd.concat([X2,X3])
new run: 1670371441.41262 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [150000, 200000] 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371476.8580558 
format error: None 
execution error: Found input variables with inconsistent numbers of samples: [150000, 200000] 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371490.952993 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670371494.683861 
format error: None 
execution error: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670371496.419466 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371520.103837 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670371548.72868 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670371552.7909288 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670371564.92519 
format error: None 
execution error: None 
X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670371600.537368 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670371647.282325 
format error: None 
execution error: None 
df['DepDel15'].sum()
new run: 1670371653.2480938 
format error: None 
execution error: None 
df['DepDel15'].sum()/len(df)
new run: 1670371689.426073 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 25000)
X = pd.concat([X2,X3])
new run: 1670371697.620929 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670371700.5367198 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670371741.7445781 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670371757.3890061 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670371764.0828001 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670371767.747933 
format error: None 
execution error: None 
X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670371809.433496 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670373598.6834528 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
new run: 1670373710.715391 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
Origin = pd.get_dummies(df2['Origin'],drop_first = True)
DayOfWeek = pd.get_dummies(df2['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df2['DOT_ID_Operating_Airline'],drop_first = True)

new2 = pd.concat([Origin,DayOfWeek,DOT,df2['CRSDepTime'],df2['CRSArrTime'],df2['CRSElapsedTime']], axis = 1)
new2.dropna(inplace = True)
new run: 1670373747.4208908 
format error: None 
execution error: None 
bad = new2[20409] | new2[20436] | new2['MDW']
good = new2[19930] | new2[19690] | new2[19790]
new2['bad'] = bad
new2['good'] = good

X_test = new2[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
new run: 1670373922.347431 
format error: None 
execution error:  
Y_hat = classifier.predict(X_test)
Y_hat.sum()
new run: 1670375475.971848 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
Y_hat.sum()
new run: 1670375530.583884 
format error: None 
execution error: None 
bad = new2[20409] | new2[20436] | new2['MDW']
good = new2[19930] | new2[19690] | new2[19790]
new2['bad'] = bad
new2['good'] = good

X_test = new2[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
new run: 1670375579.376838 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
Y_hat.sum()
new run: 1670375771.520064 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670375798.4170082 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670376039.606465 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670376056.9194381 
format error: None 
execution error: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376078.2646148 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 25000)
X = pd.concat([X2,X3])
new run: 1670376079.559917 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376080.468199 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670376088.67538 
format error: None 
execution error: This MLPClassifier instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator. 
Y_hat = classifier.predict(X_test)
new run: 1670376111.153027 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 40000)
X = pd.concat([X2,X3])
new run: 1670376116.918859 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376121.152662 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670376147.0521479 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670376210.752073 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670376225.156628 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670376234.515529 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670376237.448599 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670376277.836492 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670376292.03104 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670376322.4828749 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 30000)
X = pd.concat([X2,X3])
new run: 1670376338.004416 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376341.2955651 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670376369.9219398 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670376378.6574988 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670376380.489384 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670376386.692896 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670376389.73008 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670376422.067446 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670376428.947455 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670376457.016821 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 32500)
X = pd.concat([X2,X3])
new run: 1670376461.661369 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376468.215997 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670376493.799595 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670376512.930646 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670376515.816931 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670376528.759111 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670376554.592111 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 34000)
X = pd.concat([X2,X3])
new run: 1670376574.661855 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376575.7946692 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670376591.9465659 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670376620.630382 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670376623.611341 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670376630.224063 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670376632.498362 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670376671.6435032 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670376677.4434829 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670376813.728346 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
Origin = pd.get_dummies(df2['Origin'],drop_first = True)
DayOfWeek = pd.get_dummies(df2['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df2['DOT_ID_Operating_Airline'],drop_first = True)

new2 = pd.concat([Origin,DayOfWeek,DOT,df2['CRSDepTime'],df2['CRSArrTime'],df2['CRSElapsedTime']], axis = 1)
new2.dropna(inplace = True)
new run: 1670376876.748406 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 44000)
X = pd.concat([X2,X3])
new run: 1670376883.283403 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670376892.244805 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670376919.037521 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670376929.810282 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670376932.6982589 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670376944.0393221 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670376946.886689 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670376998.6244879 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670377018.8596349 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670377085.9500659 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
Origin = pd.get_dummies(df2['Origin'],drop_first = True)
DayOfWeek = pd.get_dummies(df2['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df2['DOT_ID_Operating_Airline'],drop_first = True)

new2 = pd.concat([Origin,DayOfWeek,DOT,df2['CRSDepTime'],df2['CRSArrTime'],df2['CRSElapsedTime']], axis = 1)
new2.dropna(inplace = True)
new run: 1670377099.771615 
format error: None 
execution error: None 
bad = new2[20409] | new2[20436] | new2['MDW']
good = new2[19930] | new2[19690] | new2[19790]
new2['bad'] = bad
new2['good'] = good

X_test = new2[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
new run: 1670377160.0993001 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
Y_hat.sum()/len(Y_hat)
new run: 1670377208.9518661 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 37000)
X = pd.concat([X2,X3])
new run: 1670377224.092473 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670377225.528049 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670377263.483327 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670377535.534005 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670377544.093745 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670377550.902008 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670377601.063193 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670377615.878759 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670377634.246009 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670377644.806595 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum
new run: 1670377648.364446 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670377704.288672 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670377715.977736 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670377725.992353 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670377767.549767 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670379031.5228858 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670379034.166692 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
new run: 1670379041.198913 
format error: None 
execution error: None 
accuracy_score(Y_test,Y_hat)
Y_hat.sum()
new run: 1670379046.648235 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670379106.907559 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670379107.937514 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670379155.597623 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 38000)
X = pd.concat([X2,X3])
new run: 1670379163.751282 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670379165.792863 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670379200.091212 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670379229.24115 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670379253.7314858 
format error: None 
execution error: None 
print(accuracy_score(Y_test,Y_hat))
Y_hat.sum()
new run: 1670379260.600389 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670379312.378923 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670379313.536181 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670379403.489676 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
Origin = pd.get_dummies(df2['Origin'],drop_first = True)
DayOfWeek = pd.get_dummies(df2['DayOfWeek'],drop_first = True)
DOT = pd.get_dummies(df2['DOT_ID_Operating_Airline'],drop_first = True)

new2 = pd.concat([Origin,DayOfWeek,DOT,df2['CRSDepTime'],df2['CRSArrTime'],df2['CRSElapsedTime']], axis = 1)
new2.dropna(inplace = True)
new run: 1670379409.082262 
format error: None 
execution error: None 
bad = new2[20409] | new2[20436] | new2['MDW']
good = new2[19930] | new2[19690] | new2[19790]
new2['bad'] = bad
new2['good'] = good

X_test = new2[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
new run: 1670379484.7239108 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
Y_hat.sum()/len(Y_hat)
new run: 1670379576.023562 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = 100000)
X3 = X3.sample(n = 37500)
X = pd.concat([X2,X3])
new run: 1670379577.216254 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670379578.175162 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670379618.843033 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670379654.2277539 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670379659.4321222 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670379662.706217 
format error: None 
execution error: None 
print(accuracy_score(Y_test,Y_hat))
Y_hat.sum()
new run: 1670379768.466624 
format error: None 
execution error: None 

X_test = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y_test = new['DepDel15'].to_numpy()
new run: 1670379800.1431859 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
accuracy_score(Y_test,Y_hat)
new run: 1670379801.165117 
format error: None 
execution error: None 
Y_hat.sum()
new run: 1670380076.7317061 
format error: None 
execution error: None 
X2 = new[new['DepDel15'] == 0]
X3 = new[new['DepDel15'] == 1]
X2 = X2.sample(n = int(len(X2)*.9))
X = pd.concat([X2,X3])
new run: 1670380111.494912 
format error: None 
execution error: None 

Y = X['DepDel15'].to_numpy()
X = X[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
X = scale.fit_transform(X) 
new run: 1670380135.9651022 
format error: None 
execution error: None 
classifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)
new run: 1670381891.944009 
format error: None 
execution error: None 
classifier.fit(X_train, Y_train)
new run: 1670382001.942355 
format error: None 
execution error: None 
Y_hat = classifier.predict(X_test)
new run: 1670382007.9451761 
format error: None 
execution error: None 
print(accuracy_score(Y_test,Y_hat))
Y_hat.sum()
new run: 1670382117.9341938 
format error: None 
execution error: None 

X = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()
X = scale.fit_transform(X) 


model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
Y_prob = model.predict_proba(X_test)
new run: 1670382132.6977122 
format error: None 
execution error: None 

X = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()
X = scale.fit_transform(X) 


model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
Y_prob = model.predict_proba(X_test)
new run: 1670382223.019443 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
accuracy_score(Y_test,Y_hat)
new run: 1670382236.1673758 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
# accuracy_score(Y_test,Y_hat)
new run: 1670382269.521843 
format error: None 
execution error: None 

X = new[['bad','good','CRSDepTime','CRSArrTime']].to_numpy()
Y = new['DepDel15'].to_numpy()
X = scale.fit_transform(X) 

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
Y_prob = model.predict_proba(X_test)
new run: 1670382273.7349901 
format error: None 
execution error: None 
print(Y_train.max())
Y_hat.max()
# accuracy_score(Y_test,Y_hat)
new run: 1670382303.103611 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
print(Y_prob)
new run: 1670382357.798126 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
print(Y_prob.sort())
new run: 1670382370.250473 
format error: unexpected EOF while parsing (3518146409.py, line 5) 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort()
print(Y_prob
new run: 1670382375.218177 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort()
print(Y_prob)
new run: 1670382401.445524 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob[:1].sort()
print(Y_prob)
new run: 1670382415.731004 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 1)
print(Y_prob)
new run: 1670382425.4028218 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = -1)
print(Y_prob)
new run: 1670382431.04384 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 1)
print(Y_prob)
new run: 1670382436.033184 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
print(Y_prob)
new run: 1670382472.87394 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
print(type(Y_prob))
new run: 1670382531.290633 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
print(Y_prob[:,1])
new run: 1670382544.268037 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(Y_prob[:,1])
new run: 1670382563.248805 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(a < .6)
new run: 1670382569.3859808 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(a[a < .6])
new run: 1670382585.8014421 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .6])/len(Y_prob))
new run: 1670382594.467463 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .7])/len(Y_prob))
new run: 1670382598.408236 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .8])/len(Y_prob))
new run: 1670382602.750687 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .72])/len(Y_prob))
new run: 1670382607.67854 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
new run: 1670382644.9945002 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
Y_prob[0]
new run: 1670382651.77205 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
Y_hat[0]
new run: 1670382699.7385511 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
(a<.74 * 1)
new run: 1670382709.610089 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
out= (a<.74 * 1)
out
new run: 1670382717.9443898 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
out= (a<.74 * 1)
out = out * 1
new run: 1670382721.747662 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
out= (a<.74 * 1)
out = out * 1
out
new run: 1670382730.7754822 
format error: None 
execution error: None 
# print(Y_train.max())
# Y_hat.max()
# accuracy_score(Y_test,Y_hat)
Y_prob.sort(axis = 0)
a = Y_prob[:,1]
print(len(a[a < .74])/len(Y_prob))
out= (a<.74)*1
# out = out * 1
out
