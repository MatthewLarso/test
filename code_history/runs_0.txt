new run: 1670288027.841024 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
new run: 1670288099.883019 
format error: None 
execution error: name 'training' is not defined 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(training.csv)
new run: 1670288108.486516 
format error: None 
execution error: name 'data' is not defined 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(data/training.csv)
new run: 1670288147.742961 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
new run: 1670288172.215202 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
df.head()
new run: 1670288196.450737 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
df.head()
new run: 1670288197.689304 
format error: None 
execution error: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'. 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288198.566529 
format error: unexpected EOF while parsing (1244265679.py, line 6) 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head
new run: 1670288223.5977721 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head)
new run: 1670288228.5615602 
format error: None 
execution error:  

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head)
new run: 1670288269.8651142 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

print("hi")
df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288400.4219441 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288644.172656 
format error: None 
execution error: None 
df.corr()
new run: 1670289423.177207 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
result.corr()
new run: 1670289444.333642 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
result.corr()
new run: 1670289571.259289 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
cr
new run: 1670289679.654855 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
df2.head()
new run: 1670289804.599405 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .05]
cr
X = result[['CRSArrTime','CRSDepTime']]
new run: 1670289819.771792 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']]
new run: 1670290574.832947 
format error: None 
execution error: name 'train_test_split' is not defined 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290632.417881 
format error: None 
execution error: cannot import name 'accuracy_score' from 'sklearn.model_selection' (/Users/matthewlarson/Library/Python/3.9/lib/python/site-packages/sklearn/model_selection/__init__.py) 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import accuracy_score, train_test_split

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290687.612521 
format error: None 
execution error: Input y contains NaN. 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290730.6349561 
format error: None 
execution error: Input y contains NaN. 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290791.115131 
format error: None 
execution error: name 'true' is not defined 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(in_place = true)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290829.4245288 
format error: None 
execution error: dropna() got an unexpected keyword argument 'in_place' 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(in_place = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670291767.968041 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670291807.20913 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(inplace = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

print(df.shape)
new run: 1670291858.909455 
format error: None 
execution error: None 
print(len(X))
new run: 1670291864.531351 
format error: None 
execution error: None 
print(len(X[0]))
new run: 1670291869.999645 
format error: None 
execution error: None 
print(X)
new run: 1670295309.470051 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670295320.020413 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(inplace = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

print(df.shape)
new run: 1670295351.522038 
format error: None 
execution error: name 'LogisticRegression' is not defined 
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670295383.008349 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670297214.0190651 
format error: None 
execution error: None 
Y_hat
new run: 1670297224.494312 
format error: None 
execution error: None 
max(Y_hat)
new run: 1670297242.794896 
format error: None 
execution error: None 
max(Y)
new run: 1670297248.827362 
format error: None 
execution error: None 
max(Y_hat)
