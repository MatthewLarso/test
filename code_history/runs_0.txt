new run: 1670288027.841024 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
new run: 1670288099.883019 
format error: None 
execution error: name 'training' is not defined 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(training.csv)
new run: 1670288108.486516 
format error: None 
execution error: name 'data' is not defined 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(data/training.csv)
new run: 1670288147.742961 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
new run: 1670288172.215202 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
df.head()
new run: 1670288196.450737 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
df.head()
new run: 1670288197.689304 
format error: None 
execution error: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'. 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288198.566529 
format error: unexpected EOF while parsing (1244265679.py, line 6) 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head
new run: 1670288223.5977721 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head)
new run: 1670288228.5615602 
format error: None 
execution error:  

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head)
new run: 1670288269.8651142 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

print("hi")
df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288400.4219441 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670288644.172656 
format error: None 
execution error: None 
df.corr()
new run: 1670289423.177207 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
result.corr()
new run: 1670289444.333642 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
result.corr()
new run: 1670289571.259289 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
cr
new run: 1670289679.654855 
format error: None 
execution error: None 
df2 = pd.read_csv('data/testing_X.csv')
df2.head()
new run: 1670289804.599405 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .05]
cr
X = result[['CRSArrTime','CRSDepTime']]
new run: 1670289819.771792 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']]
new run: 1670290574.832947 
format error: None 
execution error: name 'train_test_split' is not defined 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290632.417881 
format error: None 
execution error: cannot import name 'accuracy_score' from 'sklearn.model_selection' (/Users/matthewlarson/Library/Python/3.9/lib/python/site-packages/sklearn/model_selection/__init__.py) 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import accuracy_score, train_test_split

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290687.612521 
format error: None 
execution error: Input y contains NaN. 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290730.6349561 
format error: None 
execution error: Input y contains NaN. 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290791.115131 
format error: None 
execution error: name 'true' is not defined 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(in_place = true)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670290829.4245288 
format error: None 
execution error: dropna() got an unexpected keyword argument 'in_place' 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(in_place = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = SVC()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670291767.968041 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670291807.20913 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(inplace = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

print(df.shape)
new run: 1670291858.909455 
format error: None 
execution error: None 
print(len(X))
new run: 1670291864.531351 
format error: None 
execution error: None 
print(len(X[0]))
new run: 1670291869.999645 
format error: None 
execution error: None 
print(X)
new run: 1670295309.470051 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670295320.020413 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .05]
print(cr)
result.dropna(inplace = True)
X = result[['CRSArrTime','CRSDepTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#classification models will automatically take care of one-versus-all modeling

print(df.shape)
new run: 1670295351.522038 
format error: None 
execution error: name 'LogisticRegression' is not defined 
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670295383.008349 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_test)
new run: 1670297214.0190651 
format error: None 
execution error: None 
Y_hat
new run: 1670297224.494312 
format error: None 
execution error: None 
max(Y_hat)
new run: 1670297242.794896 
format error: None 
execution error: None 
max(Y)
new run: 1670297248.827362 
format error: None 
execution error: None 
max(Y_hat)
new run: 1670297258.2139452 
format error: None 
execution error: None 
max(Y_test)
new run: 1670297295.1103702 
format error: None 
execution error: None 
(sum(Y_test) - sum(Y_hat))/len(Y_test)
new run: 1670297349.988244 
format error: None 
execution error: None 
(sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(sum)
new run: 1670297368.641262 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(sum)

print(Y_hat[Y_hat == 0])
new run: 1670297373.751578 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])
print(sum)

print(Y_hat[Y_hat == 1])
new run: 1670297392.992413 
format error: None 
execution error: None 
(sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])


new run: 1670297459.0983129 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670297540.4041312 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max
new run: 1670297543.4422169 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max()
new run: 1670297555.532968 
format error: None 
execution error: name 'Svn' is not defined 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = Svn()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670297767.797178 
format error: None 
execution error: None 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data/training.csv')
print(df.head())
new run: 1670297800.7417002 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = result.corr()
cr = cr[cr["DepDel15"] > .02]
print(cr)
result.dropna(inplace = True)
X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670297837.856729 
format error: None 
execution error: None 
from sklearn.linear_model import LogisticRegression

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
new run: 1670297865.16106 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat.max()
new run: 1670297870.224236 
format error: None 
execution error: None 
# (sum(Y_test) - sum(Y_hat))/len(Y_test[Y_test == 1])

Y_hat
new run: 1670298079.065668 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[cr["DepDel15"] > .02]
print(cr)
result.dropna(inplace = True)
X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670298113.020624 
format error: None 
execution error: None 
result = df.select_dtypes(include='number')
print(result.head())
cr = df.corr()
cr = cr[abs(cr["DepDel15"]) > .02]
print(cr)
result.dropna(inplace = True)
X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670298177.183519 
format error: None 
execution error: None 
df.dropna(inplace = True)
result = df.select_dtypes(include='number')

print(result.head())
cr = df.corr()
cr = cr[abs(cr["DepDel15"]) > .02]
print(cr)

X = result[['CRSDepTime','CRSArrTime']].to_numpy()
Y = result['DepDel15'].to_numpy()

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
print(df.shape)
new run: 1670298741.342796 
format error: None 
execution error: None 
df.columns
new run: 1670298926.7088919 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.columns
new run: 1670298980.826483 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.columns
filtered.corr()
new run: 1670299030.200338 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop("Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299072.122026 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop(["Year"],inplace = True)
filtered.columns
filtered.corr()
new run: 1670299108.950428 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop(index = "Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299131.4709928 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.columns
filtered.corr()
new run: 1670299145.058828 
format error: None 
execution error: "['Year'] not found in axis" 
filtered = df.select_dtypes(include='number') 
filtered.drop(index = "Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299174.4473999 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
filtered.columns
filtered.corr()
new run: 1670299283.469245 
format error: None 
execution error: 'Delay' 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] == filtered[CRSElapsedTime] - (filtered[CRSArrTime] - filtered[CRSArrTime])
filtered.corr()
new run: 1670299292.695582 
format error: None 
execution error: name 'CRSElapsedTime' is not defined 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered[CRSElapsedTime] - (filtered[CRSArrTime] - filtered[CRSArrTime])
filtered.corr()
new run: 1670299347.971904 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered['CRSElapsedTime'] - (filtered['CRSArrTime'] - filtered['CRSArrTime'])
filtered.corr()
new run: 1670299498.688907 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = (filtered['CRSArrTime'] - filtered['CRSArrTime']) - filtered['CRSElapsedTime'] > 5
filtered.corr()
new run: 1670299526.419164 
format error: None 
execution error: None 
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered['CRSElapsedTime'] - (filtered['CRSArrTime'] - filtered['CRSArrTime'])
filtered.corr()
new run: 1670301514.976774 
format error: None 
execution error: None 
print(df.columns)
filtered = df.select_dtypes(include='number') 
filtered.drop(columns = "Year",inplace = True)
# filtered.columns
filtered['Delay'] = filtered['CRSElapsedTime'] - (filtered['CRSArrTime'] - filtered['CRSArrTime'])
filtered.corr()
new run: 1670301671.502723 
format error: None 
execution error: name 'df1' is not defined 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df1[['OriginAiportID']].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301675.510208 
format error: None 
execution error: "None of [Index(['OriginAiportID'], dtype='object')] are in the [columns]" 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df[['OriginAiportID']].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301690.587929 
format error: None 
execution error: 'OriginAiportID' 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAiportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301711.984396 
format error: None 
execution error: Expected 2D array, got 1D array instead:
array=[10146 10146 10146 ... 11612 13930 12197].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample. 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301756.646879 
format error: None 
execution error: Expected 2D array, got 1D array instead:
array=[10146 10146 10146 ... 11612 13930 12197].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample. 
from sklearn.preprocessing import OneHotEncoder

print(df['OriginAirportID'])
ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports)
ohe_airports
new run: 1670301796.55326 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

print(df['OriginAirportID'])
ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
ohe_airports
new run: 1670301808.452467 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
ohe_airports
new run: 1670301820.41362 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
print(ohe_airports)
new run: 1670301846.658766 
format error: None 
execution error: None 
from sklearn.preprocessing import OneHotEncoder

ohe_airports = df['OriginAirportID'].to_numpy()
ohe = OneHotEncoder(sparse=False)

ohe_airports = ohe.fit_transform(ohe_airports.reshape(-1,1))
print(ohe_airports)
print(ohe_airports[0])
new run: 1670301935.297358 
format error: None 
execution error: 'numpy.ndarray' object has no attribute 'corr' 
ohe_airports.corr(df['DepDel15'])
new run: 1670301985.997668 
format error: None 
execution error: module 'numpy' has no attribute 'corr' 
np.corr(ohe_airports,df['DepDel15'])
new run: 1670302016.667825 
format error: None 
execution error: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 370 and the array at index 1 has size 5602912 
np.corrcoef(ohe_airports,df['DepDel15'])
new run: 1670302041.095256 
format error: None 
execution error: None 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
new run: 1670302053.188035 
format error: None 
execution error: None 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
df['DepDel15'].shape
new run: 1670302254.4637141 
format error: None 
execution error: Expected a 1D array, got an array with shape (5602912, 370) 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
filtered["OHE"] = ohe_airports
filtered.corr()
new run: 1670303865.435792 
format error: None 
execution error: None 
# np.corrcoef(ohe_airports,df['DepDel15'])
ohe_airports.shape
X = ohe_airports
Y = filtered['DepDel15'].to_numpy()
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.33)

# print(len(X_train))
model = LogisticRegression()
model.fit(X_train,Y_train)

Y_hat = model.predict(X_train)
